-- Creazione tabella per memorizzare gli eventi del LED
CREATE TABLE IF NOT EXISTS led_events (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    stato VARCHAR(10) NOT NULL,
    timestamp_arduino INTEGER NOT NULL,
    timestamp_sistema DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT check_stato CHECK (stato IN ('ACCESO', 'SPENTO'))
);

-- Indice sul timestamp per query piÃ¹ veloci
CREATE INDEX IF NOT EXISTS idx_timestamp ON led_events(timestamp_sistema);

-- Vista per visualizzare i dati in modo piÃ¹ leggibile
CREATE VIEW IF NOT EXISTS led_events_view AS
SELECT 
    id,
    stato,
    timestamp_arduino AS 'Millisecondi Arduino',
    timestamp_sistema AS 'Data/Ora Sistema',
    CASE 
        WHEN stato = 'ACCESO' THEN 'ðŸ’¡ LED Acceso'
        ELSE 'âš« LED Spento'
    END AS 'Descrizione'
FROM led_events
ORDER BY timestamp_sistema DESC;

-- Query di esempio per vedere gli ultimi 10 eventi
-- SELECT * FROM led_events_view LIMIT 10;

-- Query per contare quante volte il LED si Ã¨ acceso/spento
-- SELECT stato, COUNT(*) as conteggio FROM led_events GROUP BY stato;

-- Query per vedere la durata di ogni stato
-- WITH stati_con_durata AS (
--     SELECT 
--         stato,
--         timestamp_sistema,
--         LEAD(timestamp_sistema) OVER (ORDER BY timestamp_sistema) AS prossimo_timestamp
--     FROM led_events
-- )
-- SELECT 
--     stato,
--     timestamp_sistema AS inizio,
--     prossimo_timestamp AS fine,
--     ROUND((julianday(prossimo_timestamp) - julianday(timestamp_sistema)) * 24 * 60, 2) AS durata_minuti
-- FROM stati_con_durata
-- WHERE prossimo_timestamp IS NOT NULL;